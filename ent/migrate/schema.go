// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "mnemonic", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "private_key", Type: field.TypeString},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
	}
	// NodesColumns holds the columns for the "nodes" table.
	NodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "region", Type: field.TypeString},
		{Name: "dns_name", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// NodesTable holds the schema information for the "nodes" table.
	NodesTable = &schema.Table{
		Name:       "nodes",
		Columns:    NodesColumns,
		PrimaryKey: []*schema.Column{NodesColumns[0]},
	}
	// StepRunsColumns holds the columns for the "step_runs" table.
	StepRunsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "step", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "running", "success", "failed"}},
		{Name: "reason", Type: field.TypeString},
		{Name: "account_step_runs", Type: field.TypeInt, Nullable: true},
		{Name: "node_step_runs", Type: field.TypeInt, Nullable: true},
	}
	// StepRunsTable holds the schema information for the "step_runs" table.
	StepRunsTable = &schema.Table{
		Name:       "step_runs",
		Columns:    StepRunsColumns,
		PrimaryKey: []*schema.Column{StepRunsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "step_runs_accounts_step_runs",
				Columns:    []*schema.Column{StepRunsColumns[4]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "step_runs_nodes_step_runs",
				Columns:    []*schema.Column{StepRunsColumns[5]},
				RefColumns: []*schema.Column{NodesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		NodesTable,
		StepRunsTable,
	}
)

func init() {
	StepRunsTable.ForeignKeys[0].RefTable = AccountsTable
	StepRunsTable.ForeignKeys[1].RefTable = NodesTable
}
