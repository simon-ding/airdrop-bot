// Code generated by entc, DO NOT EDIT.

package node

const (
	// Label holds the string label denoting the node type in the database.
	Label = "node"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldRegion holds the string denoting the region field in the database.
	FieldRegion = "region"
	// FieldDnsName holds the string denoting the dnsname field in the database.
	FieldDnsName = "dns_name"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeStepRuns holds the string denoting the step_runs edge name in mutations.
	EdgeStepRuns = "step_runs"
	// Table holds the table name of the node in the database.
	Table = "nodes"
	// StepRunsTable is the table that holds the step_runs relation/edge.
	StepRunsTable = "step_runs"
	// StepRunsInverseTable is the table name for the StepRun entity.
	// It exists in this package in order to avoid circular dependency with the "steprun" package.
	StepRunsInverseTable = "step_runs"
	// StepRunsColumn is the table column denoting the step_runs relation/edge.
	StepRunsColumn = "node_step_runs"
)

// Columns holds all SQL columns for node fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldRegion,
	FieldDnsName,
	FieldAddress,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
