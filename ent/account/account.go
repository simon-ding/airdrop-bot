// Code generated by entc, DO NOT EDIT.

package account

const (
	// Label holds the string label denoting the account type in the database.
	Label = "account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMnemonic holds the string denoting the mnemonic field in the database.
	FieldMnemonic = "mnemonic"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldPrivateKey holds the string denoting the privatekey field in the database.
	FieldPrivateKey = "private_key"
	// EdgeStepRuns holds the string denoting the step_runs edge name in mutations.
	EdgeStepRuns = "step_runs"
	// Table holds the table name of the account in the database.
	Table = "accounts"
	// StepRunsTable is the table that holds the step_runs relation/edge.
	StepRunsTable = "step_runs"
	// StepRunsInverseTable is the table name for the StepRun entity.
	// It exists in this package in order to avoid circular dependency with the "steprun" package.
	StepRunsInverseTable = "step_runs"
	// StepRunsColumn is the table column denoting the step_runs relation/edge.
	StepRunsColumn = "account_step_runs"
)

// Columns holds all SQL columns for account fields.
var Columns = []string{
	FieldID,
	FieldMnemonic,
	FieldAddress,
	FieldPrivateKey,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
